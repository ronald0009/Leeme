package com.roab.decompiler.to.jrxml;

import java.io.File;
import java.text.MessageFormat;

import net.sf.jasperreports.engine.JRException;
import net.sf.jasperreports.engine.JasperReport;
import net.sf.jasperreports.engine.util.JRLoader;
import net.sf.jasperreports.engine.xml.JRXmlWriter;

public class JasperToXml {

	private static void convert(String sourcePath, String destinationPath) {
		try {
			JasperReport report = (JasperReport) JRLoader.loadObject(sourcePath);
			JRXmlWriter.writeReport(report, destinationPath, "UTF-8");
		} catch (JRException e) {
			e.printStackTrace();
		}
	}
	
	public static void main(String[] args) {
		String sourcePath = null;
		String destinationPath = null;

		String INPUT = args[0];
		String OUTPUT = args[1];
		System.out.println(MessageFormat.format("origin {0}, destiny {1}", INPUT, OUTPUT));
		
		File sourcedir = new File(INPUT);

		File[] jasperfiles = sourcedir.listFiles();
		File file = null;
		String name = null;
		System.out.println(MessageFormat.format("Total of files {0}", jasperfiles.length));
		for (int i = 0; i < jasperfiles.length; i++) {
			file = jasperfiles[i];
			if (file.isDirectory()) {
				System.out.println(MessageFormat.format("File number {0} is a directory {1}", i, file.getAbsolutePath()));
				continue;
			}
			name = file.getName();
			if (!name.endsWith(".jasper")) {
				System.out.println(MessageFormat.format("File number {0} is not a report {1}", i, file.getAbsolutePath()));
				continue;
			}
			
			sourcePath = INPUT + File.separator + name;
			destinationPath = OUTPUT + File.separator + name.replace(".jasper", ".jrxml");
			System.out.println(MessageFormat.format("File number {0} from {1} to {2}", i, sourcePath, destinationPath));
			convert(sourcePath, destinationPath);
		}
	}

}
